<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>101</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_move</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>000010000</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Set values for parallax background script
global.star_type = 0;
global.star_texture_size = 2;
global.star_speed = 5;
global.star_start_direction = 0;
global.star_layer_dense = 50;
global.star_size = 10;
global.star_sprite_name = "sEXAMPLE";
global.star_sprite_index = 5;
global.star_diff_color = 0;
global.star_direction = 180; 
global.star_wind_type = 0;

//Set the global vertical and horizontal speed values
//These values will be used to control the speed of the action objects
global.hsp = -5;
global.vsp = 0;
global.action_hsp = -3;
global.alien_hsp = -3;

//Set up global variable for lives/hearts
global.hearts = 9;


//Call background script
script_execute(Feryx_Star_Create, global.star_type, global.star_texture_size, global.star_speed, global.star_start_direction, global.star_layer_dense, global.star_size, global.star_sprite_name, global.star_sprite_index, global.star_diff_color);

//Kick off background music
audio_stop_sound(snd_menu_music);
var snd = audio_play_sound(snd_game_music, 10, true);
audio_sound_gain(snd, 0.1, 0);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Execute code for background
script_execute(Feryx_Star_STEPP, global.star_speed, global.star_direction, global.star_wind_type);


//Check to see if player pressed button
//If the player pressed the button check to see if there was an action in the action box
//If there was an action in the box then perform that action
//These actions can be jump or shoot

if keyboard_check(vk_escape)
    {
    game_end();
    }
    
if keyboard_check(vk_shift)
    {
    game_restart();
    }
    
//When keyboard button is pressed check to see if there is an action in the action box
//If there is an action in the action box then perform that action

if keyboard_check_pressed(vk_space) || gamepad_button_check_pressed(0, gp_face1)
    {
    //Check to see if the jump action is in the action box
    if position_meeting(384, 64, obj_jump_action)
        {
        //Move player up, if possible
        //Check that current position is not Y == 192
        //If not 192 then move up
        if (y == 192)
            {
            y = 576 
            }
        else
            {
            y = (y - 192)
            }
        }
    //Check to see if the fall action is in the action box
    if position_meeting(384, 64, obj_fall_action)
        {
        //Move player down, if possible
        //Check that current position is not Y == 576
        //If not 576 then move down
        if (y == 576)
            {
            y = 192 
            }
        else
            {
            y = (y + 192)
            }
        }
    //Check to see if the shoot action is in the action box
    if position_meeting(384, 64, obj_shoot_action)
        {
        //Shoot a laser!!!!
        instance_create(obj_player.x, obj_player.y, obj_player_laser);
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
